***********************************************************************

FILE:     README.DOS

PRODUCT:  SPF/PC

VERSION:  4.0

BY:       Command Technology Corporation

CONTENTS: Specific information on SPF/PC Version 4.0 DOS-386
          implementation.

***********************************************************************

See also README.DOC for general information concerning SPF/PC.

* SPF/PC REQUIRES AT LEAST 1 MEGABYTE OF FREE EXTENDED OR EXPANDED
  MEMORY TO RUN IN DOS! It will use more, too, if it is available.

  IF SPF/PC IS RUNNING SLUGGISHLY, IT IS PROBABLY BECAUSE IT IS
  RUNNING LOW ON MEMORY.  In our system specifications, we say it
  requires a 2 Meg machine, but it actually just needs the 1 Meg of
  RAM between the 1 and 2 Meg line.

  For SPF/PC to execute properly, at least 1 Meg needs to have this
  memory available, though.  For example, if you are running on a
  machine with 4 Meg of memory, but you have allocated a 2.5 Meg RAM
  disk, you have left only 512K of RAM available for SPF/PC (since the
  bottom 1 Meg of memory is reserved for DOS).  SPF/PC will run under
  this configuration, but will be VERY SLOW!

* Disk Cache Usage Recommendations.

  Disk caches improves general disk access significantly.  We
  recommend that you use them, with the following considerations:

  - They generally consume large blocks of extended/expanded memory,
    which is the same region as our application space.  The more
    memory used by the disk cache, the less that is available for
    SPF/PC.  If SPF/PC does not have sufficient space to run
    itself, it will be forced to page data/program to disk
    more frequently, and will slow down.

  - On 4-6 Megabyte systems, 0.5 Meg of disk cache is adequate.
    On larger systems, more may be used as desired.

  - Some disk caches (such as SuperPCKwik) have a feature where they
    will initially allocate a large block of memory for cache space,
    and then will release chunks of the memory back to the operating
    system when another application requests it -- we especially
    recommend using one of these!  They enable you to configure a
    large cache space for general DOS usage, and then to load SPF/PC
    with no performance hit at all when you load large data files.

  - SMARTDRV, the disk cache that is distributed with DOS 5 and 6,
    is a fine cache.  However, unlike some of the more sophisticated
    caches available, it will not release itself to other applications
    when they ask for extended memory; it only releases itself to
    Windows.

* Windows 3.x Users: If you would like to run SPF/PC from Windows:

  - Maintain the low maximum record size in your 0.5 profile setting and
    all other profiles that you use regularly to a number that is
    realistic for the type of files that you edit.  DO NOT USE A 64000
    BYTE MAXIMUM RECORD LENGTH UNLESS YOU ARE REALLY EDITING 64000 BYTES
    RECORDS!

    Internally, SPF/PC allocates buffers that are as large as the
    current profiles Max Record Length.  Therefore, if you have your Max
    Record Length set to 32000 but you are only editing 80 byte data, we
    unnecessarily allocate many partially unused 64000 byte buffers, and
    waste valuable Windows memory.

  - If you have are using a disk cache that releases memory back to
    Windows, enable that switch, especially when running on a 4-6
    Megabyte system.  4-6 Megabytes is insufficient to run Windows, an
    exclusive disk cache, and SPF/PC concurrently at normal execution
    speed.

  - Please see the Windows 3.x documentation on how to install a DOS
    application.  The file SPFPC.ICO is included in the install
    directory and should be used as a substitute Windows Icon for
    SPF/PC.

  - The default PIF generated by Windows 3.x fine for SPF/PC's
    needs.  You can set the XMS and EMS settings to 0 as SPF/PC 4.0
    uses the DPMI memory management under windows.

  - Windows 3.x Users who are running SPF/PC are recommended to run
    in Enhanced Mode, which is the default mode for Windows on a
    386.  Under Enhanced mode, Windows enables its DPMI server, and
    SPF/PC calls upon it to manage its memory.

  - If you are having problems in SPF/PC editing files under
    Windows 3.x try creating a permanent Windows swapfile
    of at least 2 Meg.  This will require 2 meg of contiguous (non-
    fragmented) hard disk space, but will improve Windows ability to
    serve DPMI memory.  Even defragmenting your hard disk may help.
    We suggest a permanent swapfile size of (16Mb - your total RAM).

       ie: on a 4Mb. machine, we recommend a swapfile size of 12Mb.

    Please reference you Windows 3.x documentation for instructions
    on creating a permanent swapfile.

  - Also, SPFPC.EXE will refuse to run if any DOS extender other
    than Pharlap's 386|DOS-Extender is already running in that DOS
    box, because Windows 3.0 does not support multiple DOS extenders
    in one DOS box.

* Windows for Workgroups Users

  - If you experience strange printing problems, where just a portion
    of the text you selected gets printed, or garbage gets printed
    instead, specify your printer by its network name.

    For example, your LPT1 printer may be connected via WFW to the
    \\WFW1\PRINTER printer, so instead of specifying the "LPT1" name
    on Panel 0.2, specify "\\WFW1\PRINTER".  This alternative method
    of designating the printer performs the same function, but
    should work without the problems.

* Keytronics KB3270 Users

  In DOS, if you use the Keytronics KB3270 and the default USA
  codepage, you can get reponses for all the PFKeys along the
  top of the keyboard mapping by enabling the Panel 0.1 switch:

     ENABLE KB3270 DOS DRIVER: ==> Y

  By enabling this switch, we grab the DOS keyboard interrupt at
  before DOS can and remap them to scancodes that DOS/SPF can
  work with.

  WARNING: This fix should only be used with the default USA codepage.
  If you have a codepage designated in your CONFIG.SYS, and it is
  different than 437, keyboard code "us", then enabling this switch
  may cause erratic problems with other keys, as they get mapped
  on top of each other.

* If you use split screen frequently, use the DOS SHARE.EXE utility.

  SPFPC uses DOS to resolve contention issues between the two
  different sides of a split screen, but this only functions if you
  are using the DOS SHARE utility.  If you have SHARE loaded, anytime
  you try to edit a file that is already being edited on the other
  side of the split, you will get the ACCESS DENIED message.  However,
  if you do not load SHARE, you will be able to load two completely
  separate copies of the same file simultaneously.  The side effect of
  this is that if you make changes to the first copy of the file and
  save them, and then SAVE the second copy of the file, the changes
  from the first save will be wiped out.

* If you get the error message:

     Program too big to fit in memory

  you are most likely loading SPF2.EXE instead of SPFPC.EXE.  SPF2.EXE
  is the OS/2 executable, and since OS/2 has a larger address space,
  that EXE has no problem loading there.  SPFPC.EXE is the program
  that must be loaded under DOS.

* SPF/PC is sensitive to some older TSR's that use a "one-sided"
  approach to marking the extended memory that they are using (ie: old
  versions of VDISK.SYS).

      VDISK signature off vector 19h marks memory used from
      xxxxxxh - xxxxxxxh.

  If you receive the above error message while invoking SPF/PC, then
  you need to tell the extender to do one of two things: either set
  the DOSX=-VDISK flag which tells the extender to ignore such
  markings, or use the -EXTLOW/-EXTHIGH switches to limit where SPF/PC
  executes from.

  See below for more information on how to set these switches.

* Desqview 386 users who are running SPFPC.EXE may experience SPF/PC
  taking more memory then was given by Desqview.  This is because
  Desqview is not handling the VCPI memory standard as implemented by
  the Phar-Lap Dos Extender.  To force SPF/PC to use only the memory
  you wish to allocated to it, create a batch file "SPF.BAT"
  containing the following:

           SET DOSX=-MAXV xxxxxxh -MAXE 0h -MAXX 0h
           SPFPC

  Where xxxxxxh is the number of bytes, in hex, that you wish to give
  to SPF/PC.  For example:  "200000h" is 2 meg of memory.  Now invoke
  "SPF" instead of SPF/PC in the Desqview window.

* SPF/PC, during execution, will only occupy ~85K of conventional RAM,
  leaving the rest for calling FOREGROUND applications and utilities.
  However, during load time, SPF/PC consumes about 280K, which maybe
  too much to coexist with some other applications.  Once it has
  finished loading, it releases all the extra RAM back to DOS.

  You can configure SPF/PC to load in as little as 180K by setting the
  -MINREAL switch to 0h.  To do this, set the DOSX environmental
  variable as follows:

      SET DOSX=-MINREAL 0h

  For more information on setting DOS switches, see below.

* If you are completely unable to execute SPF/PC with your default
  configuration, you may use the INFO386 utility included with the
  package to get a look at how the 386-extender views your system.
  INFO386 prints out many pages of output to STDOUT, so you will not
  be able to read it unless you pipe the output through more or print
  it to an printer/file.  To pipe it through more:

     INFO386 | MORE

  To print it to your printer:

     INFO386 > PRN

  To make it dump to an output file:

     INFO386 > filename

  At the end of every INFO386 dump, the message:

     "Cannot locate the RUN386.EXE file"

  get printed.  Even though this may seem like an important error
  message, it is not significant and can be disregarded.  RUN386.EXE
  is another program that Pharlap distributes with the 386-Extender
  but we don't use it as we have the extender bound into the SPF/PC
  file.

* If you are having trouble loading SPF/PC 4.0 in Windows try to run
  it in DOS (not a Windows DOS session!!!).

* If you are experiencing difficulty when the Print Screen key is
  pressed, please check the following:

     -if you use QEMM, the Stealth parameter can cause this problem.

     -if you have a network, be sure any printer you use is available
      and on-line at the LPT1 port.

* If you are having trouble loading SPF/PC 4.0 in DOS and you DO NOT
  have an essential device driver (like Stacker, Double disk, or a
  SCSI hard drive) try renaming your CONFIG.SYS and AUTOEXEC.BAT
  files and rebooting.  If this works rename CONFIG.SYS back to normal
  and reboot.  If this doesn't work its most likely a device driver conflict.
  Use REM to try to isolate the driver and load it in a different
  region.  If it does run its most likely a TSR so use REM again.
  If both the CONFIG.SYS and AUTOEXEC.BAT are both renamed and SPF/PC
  4.0 will still not run, call Technical Support at (510) 521-5900 x3.

* SPF/PC is incompatible with a public domain utility named SPECTRUM.
  If SPECTRUM is in your AUTOEXEC file, please remove it.  The
  problem, as reported by a few SPF/PC users, is that SPF/PC starts to
  run painfully slow.

  If you are not running SPECTRUM, and you are encountering a slow
  down problem, assume that the problem is related to insufficient
  memory issues described above, as they are more common.

SPF/PC and 386|DOS-Extender Command Line Switches Descriptions
--------------------------------------------------------------
  The switches described below are 386|DOS-Extender switches that may
  be useful to end-users.  Optional characters in the switch are
  enclosed in brackets.  Numbers entered as switch parameters are base
  10 by default; they may be entered in hexadecimal (base 16) by
  appending the character 'h' to the number (e.g., -MINREAL 4096 and
  -MINREAL 1000h are equivalent).

  You may set multiple switches using the same DOSX variable.

SPF/PC Usage of the Configuration Switches
------------------------------------------
  Usage:

     SET DOSX=<switches below>

  For example, if you wanted to use the VDISK flag and limit a portion
  of the XMS RAM available to the system, you would set the DOSX
  variable as follows BEFORE executing SPF/PC.

     SET DOSX=-VDISK -EXTL 200000h -EXTL 400000h
     SPFPC

  Now when invoked, SPF/PC would look for VDISK-ish memory marks, and
  would only load into the extended range from 2 to 4 meg.

  If you choose to permanently set these switches, add the SET DOSX
  line to your AUTOEXEC.BAT file.  Then, anytime you restart your
  system, SPF/PC will be set to run under the modified settings.

Weitek 1167/3167/4167 Coprocessor Detection
-------------------------------------------
-WEITEK ON
  386|DOS-Extender automatically detects a Weitek coprocessor by
  making a Weitek-approved BIOS detection call.  Some machines have
  BIOSes that do not support this detection call, with the result that
  386|DOS-Extender thinks there is no Weitek coprocessor when in fact
  on is installed.  If the application program requires a Weitek
  coprocessor, and is refusing to run because it thinks one is not
  present, use the -WEITEK ON switch to inform 386|DOS-Extender that a
  Weitek coprocessor is actually present.

Cyrix EMC87 Coprocessor Detection
---------------------------------
-CYRIX ON
  386|DOS-Extender automatically detects a Cyrix EMC87 coprocessor
  (which can be programmed both with normal 80387 instructions, and
  via a high performance memory-mapped interface).  The detection
  check is extremely reliable, but the -CYRIX ON switch is available
  to force detection of the Cyrix EMC87 in the unlikely event it is
  not automatically recognized.

Avoiding 386 B1 Stepping Paging Erratum, with 386|VMM
-----------------------------------------------------
-ERR[ATA17]
  There are two paging errata on the B1 stepping of the 80386 chip.
  They both cause the machine to hang when running a program that uses
  80387 floating point instructions in protected mode.  Both errata
  are dependent on timing factors and the same program may hang in
  different places or not hang at all in successive runs.

  If the application program is bound with 386|VMM (uses virtual
  memory, and it is possible to reboot the machine with CTRL-ALT-DEL
  after it hangs, use the -ERRATA17 switch to enable a software
  workaround to the chip erratum.

  The other paging erratum (known as erratum 21) has no viable
  software workaround, and can occur regardless of whether 386|VMM is
  used.  The symptom of erratum 21 is that the machine cannot be
  rebooted with CTRL-ALT-DEL after it hangs.  A hardware workaround
  for erratum 21, in the form of a circuit board that goes between the
  386 chip and the socket on the motherboard, is available from Intel.
  Upgrading to a D0 step 386 chip also solves the problem.

Limiting Total Program Memory Usage
-----------------------------------
-MAXP[GMMEM] nbytes
  The -MAXPGMMEM switch limits the maximum amount of memory allocated
  to the application program.  If the program does not use 386|VMM, it
  limits the amount of physical memory consumed by the program.  If
  the program does use 386|VMM, it limits the total amount of physical
  memory plus disk space for the swap file.  If you limit a program's
  memory consumption too much, it may not be able to run.

Leaving Conventional Memory Free
--------------------------------
-MINR[EAL] nparas
-MAXR[EAL] nparas
  By default, 386|DOS-Extender allocates all conventional memory
  (memory below 640K) for use by the application program, leaving none
  available for use by other programs.  The conventional memory is all
  freed again when the application program terminates.  Most
  applications that allow other programs to run (e.g., with an
  "execute DOS command" option) make sure there is enough conventional
  memory available to run the other program.  However, if insufficient
  conventional memory is available, the -MINREAL and -MAXREAL switches
  can be used to limit the conventional memory used for the
  application program when it is initially loaded.

  The -MINREAL switch requires that at least the specified number of
  16-byte paragraphs of memory must be left free, available for use by
  other programs.  For example, -MINREAL 1000h leaves 64 KB (4K
  paragraphs) of memory free.

  The -MAXREAL switch is a request rather than a requirement;  it
  leaves as much conventional memory free as possible, up to the
  specified number of 16-byte paragraphs.  However, the minimum
  load-time memory requirements of the application program override
  the value specified with -MAXREAL.  Using the -MAXREAL FFFFh switch
  (requesting 1 MB of conventional memory be left free) will cause
  386|DOS-Extender to leave as much conventional memory free as
  possible.

Leaving Extended Memory Free
----------------------------
-MAXBL[KXMS] nbytes
  XMS memory is allocated in blocks;  because the total number of
  available blocks is limited, by default 386|DOS-Extender always
  allocates the largest available block when more memory is needed for
  the application program.  This may result in one program consuming
  all available memory, even though it doesn't need it all.  Under
  Windows 4.0, for example, this could mean one protected mode
  application takes all the XMS memory and no programs in other
  windows can get memory.  The -MAXBLKXMS switch limits the maximum
  size of each allocated XMS block.  The smaller the size of each
  block, the less memory will potentially be needlessly allocated.
  But if you make the block size too small, you risk running out of
  XMS handles because too many XMS blocks get allocated.  If you need
  to use the -MAXBLKXMS switch to leave XMS memory free for other
  programs, use a fairly large block size such as 256K or 512K, and
  use the /numhandles=128 switch on the HIMEM.SYS driver when it is
  installed in CONFIG.SYS

-MAXV[CPIMEM] nbytes
-MAXX[MSMEM] nbytes
-MAXE[XTMEM] nbytes
  By default, all available extended memory is allocated for the
  application program as it is needed.  These switches can be used to
  limit consumption of extended memory from a specific source, thus
  leaving memory available for other programs.  Of course, limiting
  memory usage too severely may result in the application program
  being unable to run.

  The -MAXVCPIMEM switch limits consumption of memory from an EMS
  emulator with the VCPI interface to the specified number of bytes.

  The -MAXXMSMEM switch limits consumption of memory from an XMS
  driver (HIMEM.SYS) to the specified number of bytes.

  The -MAXEXTMEM switch limits consumption of extended memory
  allocated directly by 386|DOS-Extender (rather than through the VCPI
  or XMS interfaces) to the specified number of bytes.

Avoiding Programs That Incorrectly Mark Extended Memory Usage
-------------------------------------------------------------
-VDISK
  Older VDISK (RAM disk) programs mark their usage of extended memory
  in two locations.  Some programs mark only one location and not the
  other, or occasionally a second program wipes out one of the marks.
  If 386|DOS-Extender sees two different size values in the two marker
  locations, it prints out an error message identifying the two size
  values.  The -VDISK switch tells 386|DOS-Extender to use the larger
  of the two size marks and proceed normally.  Alternatively, the
  -EXTLOW switch can be used to give 386|DOS- Extender the correct low
  threshold in extended memory (the VDISK marking standard always
  allocates extended memory from 1 MB up).

-EXTL[OW] address
-EXTH[IGH] address
  Some older programs use extended memory without marking their use of
  it.  If you are using such a program, and you know which address
  range in extended memory it uses, you can use the -EXTLOW and
  -EXTHIGH switch to limit the address range 386|DOS-Extender uses in
  extended memory so conflicts will not occur.  For example, the
  switch settings "-EXTLOW 200000h -EXTHIGH 400000h" limit extended
  memory usage by 386|DOS-Extender to the range 2 MB - 4 MB.

Running on a 386 Chip with the 32-bit MULtiply Erratum
------------------------------------------------------
-NOMUL
  Some B1 stepping 386 chips have an erratum that causes incorrect
  results from the MUL instruction when multiplying certain values.
  If 386|DOS-Extender detects this erratum, it prints an error message
  and refuses to run the program.  The -NOMUL switch can be used to
  force 386|DOS-Extender to run the program.  Before using the -NOMUL
  switch, you should check with the application developer to make sure
  the application does not use the 32-bit MUL instruction
  (386|DOS-Extender does not use the instruction).

Obtaining Debug Information When Programs Don't Work
----------------------------------------------------
-DEBUG 3
  The -DEBUG 3 switch enables debug printout by 386|DOS-Extender
  during program initialization.  It is useful for helping to track
  down problems that occur before the application program is loaded.
  If you think you are encountering such a problem, use the -DEBUG 3
  switch and redirect the output to a file, and then send the printout
  to the application developer for diagnosis.

-COM1
-COM2
-BAUD 9600
  If the machine reboots when you run the application, and you can't
  obtain all the information printed out by the -DEBUG switch, try
  redirecting the debug output to a serial I/O port.  Connect the
  serial port to a dumb terminal or another PC running a terminal
  emulator program.  The -COM1 switch redirects I/O to serial port 1,
  -COM2 to serial port 2.  Use the DOS MODE command to set the desired
  port parameters before running the program, or use the -BAUD switch
  to set the port parameters to 8 data bits, 1 stop bit, no parity,
  and the specified baud rate.  You can use CTRL-S and CTRL-Q at the
  remote terminal to stop and start the debug printout.

Pharlap Extender in an XMS Environment
--------------------------------------
-XMS AUTO
  The default setting of the XMS switch, this means assume that the
  XMS lock block call returns linear addresses under 386-to-the-Max,
  physical addresses under all other XMS drivers.  Since the XMS spec
  is interpreted ambiguously in different XMS implementations,
  386|DOS-Extender needs to make assumptions (or be told) whether the
  XMS lock block call returns physical or linear addresses.

-XMS OFF
  Don't use any XMS memory

-XMS PHYS[ICAL]
  Assume the XMS lock block call returns physical addresses

-XMS LIN[EAR]
  Assume the XMS lock block call returns linear addresses

Virtual Memory Swap File Controls
---------------------------------
-SWAPDIR <dir name>
  Specifies what specific directory the VM swap file is going to be
  written in.  By default, swap file is created in the root directory
  of the logged drive.  <dir name> cannot be a relative directory; it
  must reference the entire path name including the root of the drive
  specified.

-SWAPDEFDRIVE <drive name>
  Specifies what drive the VM swap file is going to be written in.  By
  default, swap file is created in the root directory of the logged
  drive.

-SWAPNAME <filename>
  Specifies the filename of the VM swap file.  When not used, the
  filename is a randomly generated name that is unique in the
  directory.

-NOVM
  Disables Virtual Memory altogether.  When SPF/PC runs out of
  physical memory, program will get an OUT OF MEMORY error, and will
  not look for additional disk space to page out to.
